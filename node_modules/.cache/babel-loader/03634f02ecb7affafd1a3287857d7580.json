{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction TodoList() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [todoValue, setTodoValue] = useState([]);\n\n  const addLists = text => {\n    setTodoValue(x => [...x, {\n      id: Math.random().toString(),\n      text: text\n    }]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addLists(input);\n  };\n\n  const makeList = value => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: value.items.map(list => {\n        return list.text;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setInput(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), todoValue && todoValue.map(list => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: list.text\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"Hq4lbYtbPDPM6HmnZzjrYIfoPPE=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/react-app/src/TodoList.tsx"],"names":["React","useState","TodoList","input","setInput","todoValue","setTodoValue","addLists","text","x","id","Math","random","toString","handleSubmit","e","preventDefault","makeList","value","items","map","list","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAOC;;AAED,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAc,EAAd,CAA1C;;AAEA,QAAMM,QAAQ,GAAIC,IAAD,IAAiB;AAChCF,IAAAA,YAAY,CAAEG,CAAC,IAAI,CAAC,GAAGA,CAAJ,EAAM;AAACC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAL;AAA+BL,MAAAA,IAAI,EAAEA;AAArC,KAAN,CAAP,CAAZ;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAEC,CAAD,IAAqB;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMc,QAA4B,GAAGC,KAAK,IAAI;AAC1C,wBACE;AAAA,gBAAKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAE;AAAC,eAAOA,IAAI,CAACb,IAAZ;AAAiB,OAAxC;AAAL;AAAA;AAAA;AAAA;AAAA,YADF;AAGH,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACE;AAAA,+BAAO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGC,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACO,aAAF,CAAgBJ,KAAjB;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGb,SAAS,IAAIA,SAAS,CAACe,GAAV,CAAcC,IAAI,IAAI;AAClC,0BACE;AAAA,+BACE;AAAA,oBAAmBA,IAAI,CAACb;AAAxB,WAASa,IAAI,CAACX,EAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANa,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnCQR,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nexport interface TodoValue {\n  id: string\n  text: string\n}\ninterface TodoProps {\n  items: {id: string, text: string}[]\n};\n\nfunction TodoList() {\n  const [input,setInput] = useState('')\n  const [todoValue, setTodoValue] = useState<TodoValue[]>([])\n\n  const addLists = (text:string) => {\n    setTodoValue( x => [...x,{id: Math.random().toString(), text: text}])\n  }\n\n  const handleSubmit=(e:React.FormEvent)=>{\n    e.preventDefault()\n    addLists(input)\n  }\n\n  const makeList:React.FC<TodoProps> = value => {\n      return(\n        <li>{value.items.map(list=>{return list.text})}</li>\n      )\n  }\n\n  return (\n    <div>\n      <h2>TodoList</h2>\n      <form onSubmit={handleSubmit}>\n        <label><input type='text' onChange={ e => setInput(e.currentTarget.value)}/></label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {todoValue && todoValue.map(list => {\n        return(\n          <ul>\n            <li key={list.id}>{list.text}</li>\n          </ul>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}