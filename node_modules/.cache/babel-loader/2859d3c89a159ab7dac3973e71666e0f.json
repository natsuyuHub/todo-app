{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CheckboxList from './CheckboxList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst TodoList = () => {\n  _s();\n\n  const [currentNumber, setCurrentNumber] = useState(0);\n  const [input, setInput] = useState('');\n  const [todoValue, setTodoValue] = useState([]);\n  const [aryNumber, setAryNumber] = useState([]);\n\n  const handleSubmit = e => {\n    setCurrentNumber(currentNumber + 1);\n    e.preventDefault();\n    setTodoValue(x => [...x, {\n      id: Math.random().toString(),\n      text: input\n    }]);\n\n    let adr6 = () => [{ ...todoValue,\n      aryNumber: currentNumber\n    }];\n\n    setAryNumber({ ...todoValue,\n      aryNumber: currentNumber\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolistForm\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todoformlabel\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setInput(e.currentTarget.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoValue.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: list.text\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerCenter\",\n      children: /*#__PURE__*/_jsxDEV(CheckboxList, {\n        items: aryNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"6KvvQDiPR014+F55S46+ZGpeRLA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/react-app/src/TodoList.tsx"],"names":["React","useState","CheckboxList","TodoList","currentNumber","setCurrentNumber","input","setInput","todoValue","setTodoValue","aryNumber","setAryNumber","handleSubmit","e","preventDefault","x","id","Math","random","toString","text","adr6","currentTarget","value","map","list"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AASC;;AAED,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAc,EAAd,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAc,EAAd,CAA1C;;AAEA,QAAMW,YAAY,GAAEC,CAAD,IAAqB;AACtCR,IAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AACAS,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,YAAY,CAAEM,CAAC,IAAI,CAAC,GAAGA,CAAJ,EAAM;AAACC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAL;AAA+BC,MAAAA,IAAI,EAAEd;AAArC,KAAN,CAAP,CAAZ;;AACA,QAAIe,IAAI,GAAK,MAAM,CAAC,EAAC,GAAGb,SAAJ;AAAeE,MAAAA,SAAS,EAACN;AAAzB,KAAD,CAAnB;;AACAO,IAAAA,YAAY,CAAC,EAAC,GAAGH,SAAJ;AAAeE,MAAAA,SAAS,EAACN;AAAzB,KAAD,CAAZ;AACD,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACA;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA,iCAAkC;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACS,aAAF,CAAgBC,KAAjB;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBACCf,SAAS,CAACgB,GAAV,CAAcC,IAAI,IAAI;AACrB,4BACE;AAAA,oBAAmBA,IAAI,CAACL;AAAxB,WAASK,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAGC,OAJF;AADD;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEN;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnCD;;GAAMP,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport CheckboxList from './CheckboxList';\nexport interface TodoValue {\n  id: string\n  text: string\n}\ninterface TodoProps {\n  id: string,\n  text: string,\n  aryNumber: number\n};\n\nconst TodoList = () => {\n  const [currentNumber, setCurrentNumber] = useState(0)\n  const [input,setInput] = useState('')\n  const [todoValue, setTodoValue] = useState<TodoValue[]>([])\n  const [aryNumber, setAryNumber] = useState<TodoProps[]>([])\n\n  const handleSubmit=(e:React.FormEvent)=>{\n    setCurrentNumber(currentNumber+1)\n    e.preventDefault()\n    setTodoValue( x => [...x,{id: Math.random().toString(), text: input}])\n    let adr6 = ( () => [{...todoValue, aryNumber:currentNumber}])\n    setAryNumber({...todoValue, aryNumber:currentNumber})\n  }\n\n  return (\n    <div>\n      <h2>TodoList</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"todolistForm\">\n        <label className=\"todoformlabel\" ><input type='text' onChange={ e => setInput(e.currentTarget.value)}/></label>\n        </div>\n      </form>\n      <ul>\n      {todoValue.map(list => {\n        return(\n          <li key={list.id}>{list.text}</li>\n          )\n        })\n      }\n      </ul>\n      <div className=\"containerCenter\" >\n        <CheckboxList items={aryNumber}/>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}