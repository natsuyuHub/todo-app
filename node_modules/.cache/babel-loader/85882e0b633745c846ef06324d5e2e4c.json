{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoListNext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoListNext() {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [isOpen, setIsOpen] = useState();\n\n  const handleClick = () => {\n    setIsOpen(() => !isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [inputValue, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todoBtn\",\n      onClick: () => {\n        setInputValue('クリックした');\n      },\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todoBtn\",\n      onClick: handleClick,\n      children: \"\\u30D5\\u30A9\\u30FC\\u30E0\\u304C\\u51FA\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolistForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todoformlabel\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u3053\\u3053\\u306B\\u66F8\\u3044\\u3066\\u306D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u306A\\u3044\\u3088\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoListNext, \"rD934a+fwN3pd7UsMIR/XSXZgSs=\");\n\n_c = TodoListNext;\nexport default TodoListNext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListNext\");","map":{"version":3,"sources":["/react-app/src/TodoListNext.tsx"],"names":["React","useState","TodoListNext","inputValue","setInputValue","isOpen","setIsOpen","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;AAEA,QAAMM,WAAW,GAAG,MAAI;AACtBD,IAAAA,SAAS,CAAC,MAAI,CAACD,MAAN,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,eACGF,UADH,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,aAAa,CAAC,QAAD,CAAb;AAAwB,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGF,MAAM,gBAAG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACR;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YAAH,gBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArBQH,Y;;KAAAA,Y;AAuBT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport './style.css';\n\nfunction TodoListNext() {\n  const [inputValue, setInputValue] = useState('')\n  const [isOpen, setIsOpen] = useState<boolean>()\n\n  const handleClick = ()=>{\n    setIsOpen(()=>!isOpen)\n  }\n\n  return (\n    <div>\n      {inputValue}\n      <br />\n      <button className=\"todoBtn\" onClick={()=>{setInputValue('クリックした')}}>＋</button>\n      <button className=\"todoBtn\" onClick={handleClick}>フォームが出る</button>\n      {isOpen ? <div className=\"todolistForm\">\n        <label className=\"todoformlabel\">\n          <input type=\"text\" placeholder=\"ここに書いてね\" />\n        </label>\n      </div> : <p>ないよ</p>}\n    </div>\n  );\n}\n\nexport default TodoListNext;"]},"metadata":{},"sourceType":"module"}