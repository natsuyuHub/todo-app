{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currentId = 0;\n\nfunction TodoList() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [todoValue, setTodoValue] = useState([]);\n  const list = {\n    todos: [{\n      id: 0,\n      text: \"りんご\"\n    }, {\n      id: 2,\n      text: \"ごりら\"\n    }, {\n      id: 3,\n      text: \"らっぱ\"\n    }, {\n      id: 4,\n      text: \"ぱんだ\"\n    }]\n  }; // const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n  //   setInput(e.currentTarget.value)\n  // }\n\n  const handleSubmit = e => {\n    currentId++;\n    e.preventDefault(); // const newTodo = {todos:[{id: currentId, text:input}]}\n    // const newTodos =  {...todoValue.todos, newTodo}\n    // console.log(\"newTodo:\", newTodos)\n\n    setTodoValue({\n      todos: [{\n        id: currentId,\n        text: input\n      }]\n    }); // setTodoValue(todoValue.todos.push() )\n    // alert(input);\n  };\n\n  console.log(\"todoValue:\", todoValue.todos[0]);\n\n  const handleDelete = index => {\n    console.log(index); // delete list.todos[index]\n\n    console.log(list.todos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), todoValue.todos.map(({\n      id,\n      text\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"\\u6D88\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 73\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 50\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => {\n            setInput(e.currentTarget.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"Hq4lbYtbPDPM6HmnZzjrYIfoPPE=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/react-app/src/TodoList.tsx"],"names":["React","useState","currentId","TodoList","input","setInput","todoValue","setTodoValue","list","todos","id","text","handleSubmit","e","preventDefault","console","log","handleDelete","index","map","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AASA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAkB,EAAlB,CAA1C;AAEA,QAAMO,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAC,CADL;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADK,EAKL;AACED,MAAAA,EAAE,EAAC,CADL;AAEEC,MAAAA,IAAI,EAAE;AAFR,KALK,EASL;AACED,MAAAA,EAAE,EAAC,CADL;AAEEC,MAAAA,IAAI,EAAE;AAFR,KATK,EAaL;AACED,MAAAA,EAAE,EAAC,CADL;AAEEC,MAAAA,IAAI,EAAE;AAFR,KAbK;AADI,GAAb,CAJkB,CAyBlB;AACA;AACA;;AAEA,QAAMC,YAAY,GAAEC,CAAD,IAAsC;AACvDX,IAAAA,SAAS;AACTW,IAAAA,CAAC,CAACC,cAAF,GAFuD,CAGvD;AACA;AACA;;AACAP,IAAAA,YAAY,CAAC;AAACE,MAAAA,KAAK,EAAC,CAAC;AAACC,QAAAA,EAAE,EAAER,SAAL;AAAgBS,QAAAA,IAAI,EAACP;AAArB,OAAD;AAAP,KAAD,CAAZ,CANuD,CAOvD;AACA;AACD,GATD;;AAUAW,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBV,SAAS,CAACG,KAAV,CAAgB,CAAhB,CAAzB;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAkB;AACrCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADqC,CAErC;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,KAAjB;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEKH,SAAS,CAACG,KAAV,CAAgBU,GAAhB,CAAoB,CAAC;AAACT,MAAAA,EAAD;AAAIC,MAAAA;AAAJ,KAAD,EAAWO,KAAX,kBAAoB;AAAA,6BAAK;AAAA,mBAAaP,IAAb,eAAkB;AAAQ,UAAA,OAAO,EAAE,MAAIM,YAAY,CAACC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA,SAAQR,EAAR;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAxC,CAFL,eAIE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACA;AAAA,+BAAO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAoB,UAAA,KAAK,EAAER,KAA3B;AAAkC,UAAA,QAAQ,EAAGS,CAAD,IAAK;AAACR,YAAAA,QAAQ,CAACQ,CAAC,CAACO,aAAF,CAAgBC,KAAjB,CAAR;AAAgC;AAAlF;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1DQlB,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nexport interface setsTodoValue {\n  todos: {\n    id: number\n    text: string|number\n  }\n}\n\nlet currentId = 0\n\nfunction TodoList() {\n  const [input,setInput] = useState('')\n  const [todoValue, setTodoValue] = useState<setsTodoValue[]>([])\n\n  const list = {\n    todos: [\n      {\n        id:0,\n        text: \"りんご\"\n      },\n      {\n        id:2,\n        text: \"ごりら\"\n      },\n      {\n        id:3,\n        text: \"らっぱ\"\n      },\n      {\n        id:4,\n        text: \"ぱんだ\"\n      },\n    ]\n  }\n\n  // const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n  //   setInput(e.currentTarget.value)\n  // }\n\n  const handleSubmit=(e:React.FormEvent<HTMLFormElement>)=>{\n    currentId++\n    e.preventDefault()\n    // const newTodo = {todos:[{id: currentId, text:input}]}\n    // const newTodos =  {...todoValue.todos, newTodo}\n    // console.log(\"newTodo:\", newTodos)\n    setTodoValue({todos:[{id: currentId, text:input}]})\n    // setTodoValue(todoValue.todos.push() )\n    // alert(input);\n  }\n  console.log(\"todoValue:\",todoValue.todos[0])\n\n  const handleDelete = (index:number) => {\n    console.log(index)\n    // delete list.todos[index]\n    console.log(list.todos)\n  }\n\n  return (\n    <div>\n      <h2>TodoList</h2>\n        {todoValue.todos.map(({id,text},index) =><div><p key={id}>{text}<button onClick={()=>handleDelete(index)}>消す</button></p></div>)}\n        {/* <li>{todoValue['text']}</li> */}\n      <form onSubmit={handleSubmit}>\n      <label><input type='text'  value={input} onChange={(e)=>{setInput(e.currentTarget.value)}}/></label>\n      <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}