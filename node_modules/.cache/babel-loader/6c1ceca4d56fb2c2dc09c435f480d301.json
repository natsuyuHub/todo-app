{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoListNext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CheckboxList from './CheckboxList';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoListNext() {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [isOpen, setIsOpen] = useState();\n  const [todos, setTodos] = useState([]);\n\n  const todoAdd = text => {\n    setTodos(prevTodos => [...prevTodos, {\n      id: Math.random().toString(),\n      text: text\n    } // これにより、{id: \"0.8759291112629384\", text: \"宿題をする\"}のようなデータをもつテキストが生成される。\n    ]);\n  };\n\n  const handleClick = () => {\n    setIsOpen(() => !isOpen);\n  };\n\n  const todo = [{\n    id: 'タスク１',\n    text: 'ご飯を作る'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todoBtn\",\n      onClick: () => {\n        setInputValue('クリックした');\n      },\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), inputValue, /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"large\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isOpen ? \"ON\" : \"OFF\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolistForm\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todoformlabel\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u3053\\u3053\\u306B\\u66F8\\u3044\\u3066\\u306D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      items: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerCenter\",\n      children: /*#__PURE__*/_jsxDEV(CheckboxList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoListNext, \"PO2cK3wiA2taAFuyMiJKT7GCyUw=\");\n\n_c = TodoListNext;\nexport default TodoListNext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListNext\");","map":{"version":3,"sources":["/react-app/src/TodoListNext.tsx"],"names":["React","useState","IconButton","EditIcon","CheckboxList","AddTodo","Todo","TodoListNext","inputValue","setInputValue","isOpen","setIsOpen","todos","setTodos","todoAdd","text","prevTodos","id","Math","random","toString","handleClick","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMa,OAAO,GAAIC,IAAD,IAAkB;AAChCF,IAAAA,QAAQ,CAAEG,SAAS,IAAI,CACrB,GAAGA,SADkB,EAErB;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCL,MAAAA,IAAI,EAAEA;AAAtC,KAFqB,CAGrB;AAHqB,KAAf,CAAR;AAKD,GAND;;AAQA,QAAMM,WAAW,GAAG,MAAI;AACtBV,IAAAA,SAAS,CAAC,MAAI,CAACD,MAAN,CAAT;AACD,GAFD;;AAGA,QAAMY,IAAI,GAAG,CAAC;AAACL,IAAAA,EAAE,EAAE,MAAL;AAAaF,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAAb;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAI;AAACN,QAAAA,aAAa,CAAC,QAAD,CAAb;AAAwB,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,UAFH,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAEa,WAAlC;AAAA,6BAA+C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGX,MAAM,GAAG,IAAH,GAAS,KAJlB,eAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEY;AAAb;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApCQf,Y;;KAAAA,Y;AAsCT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CheckboxList from './CheckboxList';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\n\nfunction TodoListNext() {\n  const [inputValue, setInputValue] = useState('')\n  const [isOpen, setIsOpen] = useState<boolean>()\n  const [todos, setTodos] = useState<ToDo[]>([]);\n\n  const todoAdd = (text: string) => {\n    setTodos( prevTodos => [\n      ...prevTodos,\n      { id: Math.random().toString(), text: text }\n      // これにより、{id: \"0.8759291112629384\", text: \"宿題をする\"}のようなデータをもつテキストが生成される。\n    ])\n  }\n\n  const handleClick = ()=>{\n    setIsOpen(()=>!isOpen)\n  }\n  const todo = [{id: 'タスク１', text: 'ご飯を作る'}]\n\n  return (\n    <div>\n      <button className=\"todoBtn\" onClick={()=>{setInputValue('クリックした')}}>＋</button>\n      {inputValue}\n      <IconButton size=\"large\" onClick={handleClick}><EditIcon /></IconButton>\n      {isOpen ? \"ON\": \"OFF\"}\n      <div className=\"todolistForm\">\n        <label className=\"todoformlabel\">\n          <input type=\"text\" placeholder=\"ここに書いてね\" />\n        </label>\n      </div>\n      <AddTodo />\n      <Todo items={todo}/>\n      <div className=\"containerCenter\" >\n        <CheckboxList />\n      </div>\n    </div>\n  );\n}\n\nexport default TodoListNext;"]},"metadata":{},"sourceType":"module"}