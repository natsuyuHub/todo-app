{"ast":null,"code":"var _jsxFileName = \"/Users/fujitsunayuu/Public/Work/todoapp/src/CheckboxList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst CheckboxList = props => {\n  _s();\n\n  const [checked, setChecked] = useState([-1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      maxWidth: 680,\n      bgcolor: 'background.paper'\n    },\n    children: props.items.map((value, index) => {\n      const labelId = `checkbox-list-label-${value.id}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          role: undefined,\n          onClick: handleToggle(index),\n          dense: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(index) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              },\n              color: \"default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: value.text,\n            disableTypography: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, value.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckboxList, \"Dn2J3dEa//FN431y0mANcriCbQg=\");\n\n_c = CheckboxList;\nexport default CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["/Users/fujitsunayuu/Public/Work/todoapp/src/CheckboxList.tsx"],"names":["React","useState","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","CheckboxList","props","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","width","maxWidth","bgcolor","items","map","index","labelId","id","undefined","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGC;;AAED,MAAMC,YAAiC,GAAGC,KAAK,IAAI;AAAA;;AACjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAC,CAAC,CAAF,CAAD,CAAtC;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAmB,MAAM;AAC5C,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAXD;;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEG,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE,GAA3B;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAV;AAAA,cACGZ,KAAK,CAACa,KAAN,CAAYC,GAAZ,CAAgB,CAACV,KAAD,EAAOW,KAAP,KAAiB;AAChC,YAAMC,OAAO,GAAI,uBAAsBZ,KAAK,CAACa,EAAG,EAAhD;AACA,0BACE,QAAC,QAAD;AAAA,+BAGA,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEC,SAAtB;AAAiC,UAAA,OAAO,EAAEf,YAAY,CAACY,KAAD,CAAtD;AAA+D,UAAA,KAAK,MAApE;AAAA,kCACE,QAAC,YAAD;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAEd,OAAO,CAACK,OAAR,CAAgBS,KAAhB,MAA2B,CAAC,CAFvC;AAGE,cAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,cAAA,aAAa,MAJf;AAKE,cAAA,UAAU,EAAE;AAAE,mCAAmBC;AAArB,eALd;AAME,cAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,YAAD;AAAc,YAAA,EAAE,EAAEA,OAAlB;AAA2B,YAAA,OAAO,EAAEZ,KAAK,CAACe,IAA1C;AAAgD,YAAA,iBAAiB;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA,SACKf,KAAK,CAACa,EADX;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD,KArBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA1CD;;GAAMlB,Y;;KAAAA,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React ,{ useState } from 'react'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Checkbox from '@mui/material/Checkbox'\ninterface TodoProps {\n  items: {id: string, text: string}[]\n};\n\nconst CheckboxList: React.FC<TodoProps> = props => {\n  const [checked, setChecked] = useState([-1])\n\n  const handleToggle = (value: number) => () => {\n    const currentIndex = checked.indexOf(value)\n    const newChecked = [...checked]\n\n    if (currentIndex === -1) {\n      newChecked.push(value)\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n\n    setChecked(newChecked)\n  };\n\n  return (\n    <List sx={{ width: '100%', maxWidth: 680, bgcolor: 'background.paper' }}>\n      {props.items.map((value,index) => {\n        const labelId = `checkbox-list-label-${value.id}`\n        return (\n          <ListItem\n          key={value.id}\n          >\n          <ListItemButton role={undefined} onClick={handleToggle(index)} dense>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(index) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n                color=\"default\"\n                />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={value.text} disableTypography/>\n          </ListItemButton>\n          </ListItem>\n          )\n      })}\n    </List>\n  )\n}\n\nexport default CheckboxList"]},"metadata":{},"sourceType":"module"}