{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CheckboxList from './CheckboxList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [todoValue, setTodoValue] = useState([]);\n\n  const validation = input => {\n    if (!input) console.log(\"validation\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTodoValue(x => [...x, {\n      id: Math.random().toString(),\n      text: input\n    }]);\n    validation(todoValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolistForm\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todoformlabel\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setInput(e.currentTarget.value),\n            onBlur: validation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoContainerCenter\",\n      children: /*#__PURE__*/_jsxDEV(CheckboxList, {\n        items: todoValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"Hq4lbYtbPDPM6HmnZzjrYIfoPPE=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/react-app/src/TodoList.tsx"],"names":["React","useState","CheckboxList","TodoList","input","setInput","todoValue","setTodoValue","validation","console","log","handleSubmit","e","preventDefault","x","id","Math","random","toString","text","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAc,EAAd,CAA1C;;AAEE,QAAMO,UAAU,GAAIJ,KAAD,IAAW;AAC9B,QAAI,CAACA,KAAL,EAAYK,OAAO,CAACC,GAAR,CAAY,YAAZ;AACb,GAFC;;AAIF,QAAMC,YAAY,GAAEC,CAAD,IAAqB;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,YAAY,CAAEO,CAAC,IAAI,CAAC,GAAGA,CAAJ,EAAM;AAACC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAL;AAA+BC,MAAAA,IAAI,EAAEf;AAArC,KAAN,CAAP,CAAZ;AACAI,IAAAA,UAAU,CAACF,SAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACA;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACQ,aAAF,CAAgBC,KAAjB,CAA3C;AAAoE,YAAA,MAAM,EAAEb;AAA5E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7BD;;GAAMH,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport CheckboxList from './CheckboxList'\nexport interface TodoValue {\n  id: string\n  text: string\n}\n\nconst TodoList = () => {\n  const [input,setInput] = useState('')\n  const [todoValue, setTodoValue] = useState<TodoValue[]>([])\n\n    const validation = (input) => {\n    if (!input) console.log(\"validation\")\n  }\n\n  const handleSubmit=(e:React.FormEvent)=>{\n    e.preventDefault()\n    setTodoValue( x => [...x,{id: Math.random().toString(), text: input}])\n    validation(todoValue)\n  }\n\n  return (\n    <div>\n      <h2>TodoList</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"todolistForm\">\n        <label className=\"todoformlabel\" >\n          <input type='text' onChange={ e => setInput(e.currentTarget.value)} onBlur={validation}/>\n        </label>\n        </div>\n      </form>\n      <div className=\"todoContainerCenter\" >\n        <CheckboxList items={todoValue}/>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}