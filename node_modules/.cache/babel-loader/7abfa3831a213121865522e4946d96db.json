{"ast":null,"code":"var _jsxFileName = \"/react-app/src/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CheckboxList from './CheckboxList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [input, setInput] = useState();\n  const [isValidation, setIsValidation] = useState(true);\n  const [todoValue, setTodoValue] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    input && isValidation ? setTodoValue(x => [...x, {\n      id: Math.random().toString(),\n      text: input\n    }]) : setIsValidation(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolistForm\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todoformlabel\",\n          children: isValidation ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              setInput(e.currentTarget.value);\n              setIsValidation(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setInput(e.currentTarget.value);\n                setIsValidation(true);\n              },\n              className: \"disabledInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"disabledInputText\",\n              children: \"\\u203B\\u7A7A\\u6587\\u5B57\\u306F\\u8FFD\\u52A0\\u3067\\u304D\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoContainerCenter\",\n      children: /*#__PURE__*/_jsxDEV(CheckboxList, {\n        items: todoValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"prRmPAU2RCait/qSCnlu1gbwS+4=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/react-app/src/TodoList.tsx"],"names":["React","useState","CheckboxList","TodoList","input","setInput","isValidation","setIsValidation","todoValue","setTodoValue","handleSubmit","e","preventDefault","x","id","Math","random","toString","text","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,EAAjC;AACA,QAAM,CAACK,YAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAc,EAAd,CAA1C;;AAEA,QAAMS,YAAY,GAAEC,CAAD,IAAqB;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,KAAK,IAAIE,YAAT,GACAG,YAAY,CAAEI,CAAC,IAAI,CAAC,GAAGA,CAAJ,EAAM;AAACC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAL;AAA+BC,MAAAA,IAAI,EAAEd;AAArC,KAAN,CAAP,CADZ,GAEAG,eAAe,CAAC,KAAD,CAFf;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACA;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA,oBACDJ,YAAY,gBACT;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGK,CAAC,IAAI;AAACN,cAAAA,QAAQ,CAACM,CAAC,CAACQ,aAAF,CAAgBC,KAAjB,CAAR;AAAgCb,cAAAA,eAAe,CAAC,IAAD,CAAf;AAAsB;AAA1F;AAAA;AAAA;AAAA;AAAA,kBADS,gBAER;AAAA,oCACD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAGI,CAAC,IAAI;AAACN,gBAAAA,QAAQ,CAACM,CAAC,CAACQ,aAAF,CAAgBC,KAAjB,CAAR;AAAgCb,gBAAAA,eAAe,CAAC,IAAD,CAAf;AAAsB,eAA1F;AAA4F,cAAA,SAAS,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,oBADC,eAED;AAAG,cAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFC;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACA,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjCD;;GAAML,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport CheckboxList from './CheckboxList'\nexport interface TodoValue {\n  id: string\n  text: string\n}\n\nconst TodoList = () => {\n  const [input,setInput] = useState<string|null>()\n  const [isValidation,setIsValidation] = useState(true)\n  const [todoValue, setTodoValue] = useState<TodoValue[]>([])\n\n  const handleSubmit=(e:React.FormEvent)=>{\n    e.preventDefault()\n    input && isValidation ?\n    setTodoValue( x => [...x,{id: Math.random().toString(), text: input}]) :\n    setIsValidation(false)\n  }\n\n  return (\n    <div>\n      <h2>TodoList</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"todolistForm\">\n        <label className=\"todoformlabel\" >\n      {isValidation ?\n          <input type='text' onChange={ e => {setInput(e.currentTarget.value);setIsValidation(true)}} />\n          :<>\n          <input type='text' onChange={ e => {setInput(e.currentTarget.value);setIsValidation(true)}} className=\"disabledInput\"/>\n          <p className=\"disabledInputText\">※空文字は追加できません</p>\n          </>\n        }\n        </label>\n        </div>\n      </form>\n      <div className=\"todoContainerCenter\" >\n      <CheckboxList items={todoValue}/>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}