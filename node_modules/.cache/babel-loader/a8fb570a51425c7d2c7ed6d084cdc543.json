{"ast":null,"code":"var _jsxFileName = \"/react-app/src/CheckboxList.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckboxList({\n  id,\n  text\n}) {\n  _s();\n\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const todoValue = props;\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      maxWidth: 680,\n      bgcolor: 'background.paper'\n    },\n    children: id.map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          role: undefined,\n          onClick: handleToggle(value),\n          dense: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              },\n              color: \"default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `Line item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxList, \"ToIMgv3BZ7kw23hJeJICam9UGKg=\");\n\n_c = CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["/react-app/src/CheckboxList.tsx"],"names":["React","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","CheckboxList","id","text","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","todoValue","props","width","maxWidth","bgcolor","map","labelId","undefined"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAtB,EAA0C;AAAA;;AACvD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAmB,MAAM;AAC5C,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAEA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAXD;;AAaA,QAAMG,SAAS,GAAGC,KAAlB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE,GAA3B;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAV;AAAA,cACGhB,EAAE,CAACiB,GAAH,CAAQX,KAAD,IAAW;AACjB,YAAMY,OAAO,GAAI,uBAAsBZ,KAAM,EAA7C;AAEA,0BACI,QAAC,QAAD;AAAA,+BAGE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEa,SAAtB;AAAiC,UAAA,OAAO,EAAEd,YAAY,CAACC,KAAD,CAAtD;AAA+D,UAAA,KAAK,MAApE;AAAA,kCACE,QAAC,YAAD;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAEJ,OAAO,CAACM,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAFvC;AAGE,cAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,cAAA,aAAa,MAJf;AAKE,cAAA,UAAU,EAAE;AAAE,mCAAmBY;AAArB,eALd;AAME,cAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,YAAD;AAAc,YAAA,EAAE,EAAEA,OAAlB;AAA2B,YAAA,OAAO,EAAG,aAAYZ,KAAK,GAAG,CAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,SACOA,KADP;AAAA;AAAA;AAAA;AAAA,cADJ;AAmBD,KAtBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CuBP,Y;;KAAAA,Y","sourcesContent":["import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nexport default function CheckboxList({id, text }: Props) {\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value: number) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const todoValue = props\n\n  return (\n    <List sx={{ width: '100%', maxWidth: 680, bgcolor: 'background.paper' }}>\n      {id.map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n            <ListItem\n              key={value}\n            >\n              <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={checked.indexOf(value) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{ 'aria-labelledby': labelId }}\n                    color=\"default\"\n                  />\n                </ListItemIcon>\n                <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n              </ListItemButton>\n            </ListItem>\n        );\n      })}\n    </List>\n  );\n}"]},"metadata":{},"sourceType":"module"}